"use strict";function merge(){for(var e=[],r=0;r<arguments.length;r++)e[r-0]=arguments[r];return this.lift.call(mergeStatic.apply(void 0,[this].concat(e)))}function mergeStatic(){for(var e=[],r=0;r<arguments.length;r++)e[r-0]=arguments[r];var l=Number.POSITIVE_INFINITY,t=null,a=e[e.length-1];return isScheduler_1.isScheduler(a)?(t=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(l=e.pop())):"number"==typeof a&&(l=e.pop()),null===t&&1===e.length?e[0]:new ArrayObservable_1.ArrayObservable(e,t).lift(new mergeAll_1.MergeAllOperator(l))}var ArrayObservable_1=require("../observable/ArrayObservable"),mergeAll_1=require("./mergeAll"),isScheduler_1=require("../util/isScheduler");exports.merge=merge,exports.mergeStatic=mergeStatic;