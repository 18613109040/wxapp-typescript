"use strict";function subscribeOn(e,r){return void 0===r&&(r=0),this.lift(new SubscribeOnOperator(e,r))}var SubscribeOnObservable_1=require("../observable/SubscribeOnObservable");exports.subscribeOn=subscribeOn;var SubscribeOnOperator=function(){function e(e,r){this.scheduler=e,this.delay=r}return e.prototype.call=function(e,r){return new SubscribeOnObservable_1.SubscribeOnObservable(r,this.delay,this.scheduler).subscribe(e)},e}();